# -*- coding: utf-8 -*-

from app import logging
from app import config
from app.remote.redis import Redis
from app.fortnite.parser.news import news as parse_news
import logging
import asyncio


def news(client, message):
    try:
        loop = asyncio.new_event_loop()
        asyncio.set_event_loop(loop)

        news_file, news_hash = asyncio.get_event_loop().run_until_complete(parse_news())
        news_file_id = asyncio.get_event_loop().run_until_complete(Redis.execute(
            "GET", "fortnite:news:file_id:{0}".format(news_hash)))['details']
        if news_file_id and not config.DEVELOPER_MODE:
            logging.info("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π —É–∂–µ –±—ã–ª–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –≤ Telegram, "
                         "File ID: {0}.".format(news_file_id))
            client.send_photo(message.chat.id, news_file_id,
                              caption="üì∞ –¢–µ–∫—É—â–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –ö–æ—Ä–æ–ª–µ–≤—Å–∫–æ–π –ë–∏—Ç–≤—ã –∏ –°—Ä–∞–∂–µ–Ω–∏—è —Å –ë—É—Ä–µ–π –≤ –§–æ—Ä—Ç–Ω–∞–π—Ç–µ.")
        else:
            news_photo = client.send_photo(message.chat.id, news_file,
                                           caption="–¢–µ–∫—É—â–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –ö–æ—Ä–æ–ª–µ–≤—Å–∫–æ–π –ë–∏—Ç–≤—ã –∏ –°—Ä–∞–∂–µ–Ω–∏—è —Å –ë—É—Ä–µ–π –≤ –§–æ—Ä—Ç–Ω–∞–π—Ç–µ.")
            news_file_id = news_photo['photo']['sizes'][-1]['file_id']
            asyncio.get_event_loop().run_until_complete(Redis.execute(
                "SET", "fortnite:news:file_id:{0}".format(news_hash), news_file_id, "EX", 86400))
    except Exception as e:
        logging.error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã /news.", exc_info=True)
        return e
