# -*- coding: utf-8 -*-

from app import logging
from app import config
from app.remote.redis import Redis
from app.api.utils import translations
import logging
import pytz
import datetime
import json
import requests


async def status():
    try:
        api_status_url = "https://status.epicgames.com/api/v2/summary.json"

        f_status = (await Redis.execute("GET", "fortnite:status"))['details']
        if f_status and not config.DEVELOPER_MODE:
            f_status = json.loads(f_status)
        else:
            f_status = requests.get(api_status_url).json()
            await Redis.execute("SET", "fortnite:status", json.dumps(f_status), "EX", 20)

        # –ü–µ—Ä–µ–≤–æ–¥–∏–º –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤ –Ω–∞ —Ä—É—Å—Å–∫–∏–π
        f_status_message = translations.translate_global_status(f_status['status']['description'])

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–∏—Å–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç –≤ —à—Ç–∞—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ
        if f_status['components']:
            broken_services = [service for service in f_status['components'] if not service['status'] == "operational"]
            if broken_services:
                f_status_message = "{0}\n\n‚õîÔ∏è –°–µ—Ä–≤–∏—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ **–Ω–µ** —Ä–∞–±–æ—Ç–∞—é—Ç –≤ —à—Ç–∞—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ:".format(
                    f_status_message)
                num = 1
                for service in f_status['components']:
                    if not service['status'] == "operational" and not service['group']:
                        f_status_message = "{0}\n{1}. {2}, —Å–æ—Å—Ç–æ—è–Ω–∏–µ: **{3}**.".format(
                            f_status_message, num, translations.translate_service_name(service['name']),
                            translations.translate_service_status(service['status']))
                        num += 1

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è—Ö
        if f_status['incidents']:
            f_status_message = "{0}\n\n‚ùóÔ∏è –ü—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–∏—Å–∞–º–∏:".format(f_status_message)
            for num, incident in enumerate(f_status['incidents']):
                f_status_message = "{0}\n{1}. {2}, [–ø–æ–¥—Ä–æ–±–Ω–µ–µ]({3}).".format(
                    f_status_message, num+1, incident['name'], incident['shortlink'])

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç–∞—Ö
        if f_status['scheduled_maintenances']:
            f_status_message = "{0}\n\nüï∞ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã:".format(f_status_message)
            for num, maintenance in enumerate(f_status['scheduled_maintenances']):
                scheduled_for_date = pytz.utc.localize(datetime.datetime.strptime(maintenance['scheduled_for'],
                                                                                  "%Y-%m-%dT%H:%M:%S.%fZ")).\
                    astimezone(pytz.timezone("Europe/Moscow"))
                scheduled_until_date = pytz.utc.localize(datetime.datetime.strptime(maintenance['scheduled_until'],
                                                                                    "%Y-%m-%dT%H:%M:%S.%fZ")).\
                    astimezone(pytz.timezone("Europe/Moscow"))
                f_status_message = "{0}\n{1}. [{2}]({3}), –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞—á–∞–ª–æ –Ω–∞ **{4}** –≤ **{5}**, " \
                                   "–æ–∫–æ–Ω—á–∞–Ω–∏–µ –Ω–∞ **{6}** –≤ **{7}** –ø–æ –ú–°–ö.".\
                    format(f_status_message, num+1, maintenance['name'], maintenance['shortlink'],
                           scheduled_for_date.strftime("%d.%m.%y"), scheduled_for_date.strftime("%H:%M"),
                           scheduled_until_date.strftime("%d.%m.%y"), scheduled_until_date.strftime("%H:%M"))

        f_status_message = "{0}\n\n–£–∑–Ω–∞—Ç—å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–±–æ—Ç–µ —Å–µ—Ä–≤–∏—Å–æ–≤ Epic Games –º–æ–∂–Ω–æ " \
                           "[–∑–¥–µ—Å—å](https://status.epicgames.com/).".format(f_status_message)

        return f_status_message
    except Exception as e:
        logging.error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø–∞—Ä—Å–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ Epic Games.", exc_info=True)
        return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø–∞—Ä—Å–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ Epic Games."
