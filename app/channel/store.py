# -*- coding: utf-8 -*-

from app import logging
from app import config
from app.remote.redis import Redis
from app.fortnite.store import store as parse_store
from app.utils import convert_to_moscow
from pyrogram import InputMediaPhoto
from itertools import zip_longest
from datetime import datetime
from time import sleep, time
import logging
import asyncio


def post(client):
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)

    while True:
        try:
            asyncio.get_event_loop().run_until_complete(post_async(client))
        except Exception:
            logging.error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –º–∞–≥–∞–∑–∏–Ω–∞ –≤ –∫–∞–Ω–∞–ª.", exc_info=True)

        sleep(30)


# –î–µ–ª–∞–µ–º dict –∏–∑ list'–∞ (–º–µ—Ç–æ–¥ HGETALL –≤ Redis –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç list); –≤–∑—è—Ç–æ –æ—Ç—Å—é–¥–∞: https://stackoverflow.com/a/6900977
async def redis_hgetall(key):
    return dict(zip_longest(*[iter((await Redis.execute("HGETALL", key))['details'])] * 2, fillvalue=""))


async def post_async(client):
    store_channel = (await redis_hgetall("fortnite:store:channel"))
    store_file, store_hash = await parse_store()

    store_caption = "üõí –ú–∞–≥–∞–∑–∏–Ω –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –§–æ—Ä—Ç–Ω–∞–π—Ç–µ –±—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω. #–º–∞–≥–∞–∑–∏–Ω"
    store_caption_edited = f"{store_caption}\n\n__–ú–∞–≥–∞–∑–∏–Ω –ø–æ—Å–ª–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ " \
                           "—Å–æ–æ–±—â–µ–Ω–∏—è –±—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω –≤ {} –ø–æ –º–æ—Å–∫–æ–≤—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏.__"

    if not store_channel or store_channel['hash'] != store_hash:
        logging.info("–ú–∞–≥–∞–∑–∏–Ω –≤ –§–æ—Ä—Ç–Ω–∞–π—Ç–µ –±—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω. –ü—É–±–ª–∏–∫—É–µ—Ç—Å—è –µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª, "
                     "—É–∫–∞–∑–∞–Ω–Ω—ã–π –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–º —Ñ–∞–π–ª–µ.")

        try:
            assert store_channel['chat_id']
            assert store_channel['message_id']
            assert store_channel['time']

            if int(time()) - int(store_channel['time']) < 7200:
                logging.info("–ü–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ—Å—Ç —Å –º–∞–≥–∞–∑–∏–Ω–æ–º –±—ã–ª –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ –∫–∞–Ω–∞–ª –º–µ–Ω—å—à–µ, —á–µ–º 2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥, –ø–æ—ç—Ç–æ–º—É "
                             "—Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –º–∞–≥–∞–∑–∏–Ω–æ–º.")

                message = client.edit_message_media(
                    int(store_channel['chat_id']), int(store_channel['message_id']),
                    media=InputMediaPhoto(store_file, caption=store_caption_edited.format(
                        convert_to_moscow(datetime.utcnow()).strftime("%H:%M:%S")
                    )))
            else:
                raise AssertionError
        except (AssertionError, TypeError, KeyError):
            message = client.send_photo(config.CHANNEL_ID, store_file, caption=store_caption)

            client.send_poll(config.CHANNEL_ID, question="–û—Ü–µ–Ω–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –º–∞–≥–∞–∑–∏–Ω –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –§–æ—Ä—Ç–Ω–∞–π—Ç–µ.",
                             options=[
                                 "üëç –ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –≤–µ—Å—å –º–∞–≥–∞–∑–∏–Ω –ø—Ä–µ–¥–º–µ—Ç–æ–≤",
                                 "üôÇ –ú–Ω–µ –Ω—Ä–∞–≤—è—Ç—Å—è –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã",
                                 "üëé –ú–Ω–µ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –≤–µ—Å—å –º–∞–≥–∞–∑–∏–Ω –ø—Ä–µ–¥–º–µ—Ç–æ–≤"
                             ], disable_notification=True)

        await Redis.execute("HSET", "fortnite:store:channel", "hash", store_hash, "chat_id", message['chat']['id'],
                            "message_id", message['message_id'], "time", int(time()))
        await Redis.execute("EXPIRE", "fortnite:store:channel", 172800)
