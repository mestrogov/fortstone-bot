# -*- coding: utf-8 -*-

from app import logging
from app import config
from app.remote.redis import Redis
from app.fortnite.parser.news import news as parse_news
from app.utils import convert_to_moscow
from pyrogram import InputMediaPhoto
from itertools import zip_longest
from datetime import datetime
from time import sleep, time
import logging
import asyncio


def post(client):
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)

    while True:
        try:
            asyncio.get_event_loop().run_until_complete(post_async(client))
        except Exception:
            logging.error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π –≤ –∫–∞–Ω–∞–ª.", exc_info=True)

        sleep(15)


# –î–µ–ª–∞–µ–º dict –∏–∑ list'–∞ (–º–µ—Ç–æ–¥ HGETALL –≤ Redis –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç list); –≤–∑—è—Ç–æ –æ—Ç—Å—é–¥–∞: https://stackoverflow.com/a/6900977
async def redis_hgetall(key):
    return dict(zip_longest(*[iter((await Redis.execute("HGETALL", key))['details'])] * 2, fillvalue=""))


async def post_async(client):
    news_channel = (await redis_hgetall("fortnite:news:channel"))
    news_file, news_hash = await parse_news()

    news_caption = "üì∞ –ù–æ–≤–æ—Å—Ç–∏ –ö–æ—Ä–æ–ª–µ–≤—Å–∫–æ–π –ë–∏—Ç–≤—ã –∏/–∏–ª–∏ –°—Ä–∞–∂–µ–Ω–∏—è —Å –ë—É—Ä–µ–π –±—ã–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã. #–Ω–æ–≤–æ—Å—Ç–∏"
    news_caption_edited = f"{news_caption}\n\n__–ù–æ–≤–æ—Å—Ç–∏ –ø–æ—Å–ª–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ " \
                          "—Å–æ–æ–±—â–µ–Ω–∏—è –±—ã–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ {} –ø–æ –º–æ—Å–∫–æ–≤—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏.__"

    if not news_channel or news_channel['hash'] != news_hash or config.DEVELOPER_MODE:
        logging.info("–ù–æ–≤–æ—Å—Ç–∏ –≤ –§–æ—Ä—Ç–Ω–∞–π—Ç–µ –±—ã–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã. –ü—É–±–ª–∏–∫—É–µ—Ç—Å—è –∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª, "
                     "—É–∫–∞–∑–∞–Ω–Ω—ã–π –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–º —Ñ–∞–π–ª–µ.")

        try:
            assert news_channel['chat_id']
            assert news_channel['message_id']
            assert news_channel['time']

            if int(time()) - int(news_channel['time']) < 3600:
                logging.info("–ü–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ—Å—Ç —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏ –±—ã–ª –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ –∫–∞–Ω–∞–ª –º–µ–Ω—å—à–µ, —á–µ–º —á–∞—Å –Ω–∞–∑–∞–¥, –ø–æ—ç—Ç–æ–º—É "
                             "—Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –Ω–æ–≤–æ—Å—Ç—è–º–∏.")

                message = client.edit_message_media(
                    int(news_channel['chat_id']), int(news_channel['message_id']),
                    media=InputMediaPhoto(news_file, caption=news_caption_edited.format(
                        convert_to_moscow(datetime.utcnow()).strftime("%H:%M:%S")
                    )))
            else:
                raise AssertionError
        except (AssertionError, TypeError, KeyError):
            message = client.send_photo(config.CHANNEL_ID, news_file, caption=news_caption)

        await Redis.execute("HSET", "fortnite:news:channel", "hash", news_hash, "chat_id", message['chat']['id'],
                            "message_id", message['message_id'], "time", int(time()))
        await Redis.execute("EXPIRE", "fortnite:news:channel", 604800)
